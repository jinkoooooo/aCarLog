[{"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\index.tsx":"1","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\reportWebVitals.ts":"2","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\App.tsx":"3","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\store\\index.ts":"4","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\actions\\themeActions.ts":"5","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\index.ts":"6","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\Routes.tsx":"7","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\index.ts":"8","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\constants\\index.ts":"9","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\themeReducer.ts":"10","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\authStore.tsx":"11","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\authMenuStore.tsx":"12","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\MenuRoutes.tsx":"13","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\layouts\\Auth.tsx":"14","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\layouts\\Dashboard.tsx":"15","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\exception\\Page404.tsx":"16","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\typography.ts":"17","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\variants.ts":"18","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\breakpoints.ts":"19","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\overrides.ts":"20","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\shadows.ts":"21","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\props.ts":"22","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\aclTheme.ts":"23","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\login\\Login.tsx":"24","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\AppBar.tsx":"25","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Sidebar.tsx":"26","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\dashboard\\Dashboard.tsx":"27","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\master\\VehicleMaster.tsx":"28","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Async.tsx":"29","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\CustomCard.tsx":"30","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\UserDropdown.tsx":"31","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Loader.tsx":"32","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\AuthAPI.tsx":"33","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\IApi.tsx":"34","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\model\\User.tsx":"35","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\LogOutRoutes.tsx":"36","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\ProgressBar.tsx":"37","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\pageStore.tsx":"38","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\VehicleAPI.tsx":"39","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\VehiclePage.tsx":"40","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\VehicleCard.tsx":"41","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\DrivingLogModal.tsx":"42","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\snackbar\\TransactionSnackbar.tsx":"43","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\DrivingLogInsertModal.tsx":"44","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\model\\Vehicle.tsx":"45","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\VehicleManagerModal.tsx":"46"},{"size":606,"mtime":1627259302296,"results":"47","hashOfConfig":"48"},{"size":440,"mtime":1627259302316,"results":"49","hashOfConfig":"48"},{"size":2037,"mtime":1627627637583,"results":"50","hashOfConfig":"48"},{"size":434,"mtime":1627259302315,"results":"51","hashOfConfig":"48"},{"size":259,"mtime":1627259302309,"results":"52","hashOfConfig":"48"},{"size":564,"mtime":1628143180471,"results":"53","hashOfConfig":"48"},{"size":2117,"mtime":1627459395166,"results":"54","hashOfConfig":"48"},{"size":1081,"mtime":1627259302320,"results":"55","hashOfConfig":"48"},{"size":843,"mtime":1627259302295,"results":"56","hashOfConfig":"48"},{"size":609,"mtime":1627259302314,"results":"57","hashOfConfig":"48"},{"size":1184,"mtime":1628148602359,"results":"58","hashOfConfig":"48"},{"size":778,"mtime":1627259302310,"results":"59","hashOfConfig":"48"},{"size":1763,"mtime":1628497776631,"results":"60","hashOfConfig":"48"},{"size":750,"mtime":1627259302297,"results":"61","hashOfConfig":"48"},{"size":3570,"mtime":1628143400986,"results":"62","hashOfConfig":"48"},{"size":1386,"mtime":1627259302305,"results":"63","hashOfConfig":"48"},{"size":1139,"mtime":1627259302323,"results":"64","hashOfConfig":"48"},{"size":5444,"mtime":1627259302324,"results":"65","hashOfConfig":"48"},{"size":147,"mtime":1627259302320,"results":"66","hashOfConfig":"48"},{"size":1650,"mtime":1627259302321,"results":"67","hashOfConfig":"48"},{"size":683,"mtime":1627259302322,"results":"68","hashOfConfig":"48"},{"size":256,"mtime":1627259302322,"results":"69","hashOfConfig":"48"},{"size":6089,"mtime":1627627921049,"results":"70","hashOfConfig":"48"},{"size":2951,"mtime":1628473140121,"results":"71","hashOfConfig":"48"},{"size":3143,"mtime":1627460602737,"results":"72","hashOfConfig":"48"},{"size":13527,"mtime":1627461911684,"results":"73","hashOfConfig":"48"},{"size":1761,"mtime":1627259302301,"results":"74","hashOfConfig":"48"},{"size":5206,"mtime":1628499573407,"results":"75","hashOfConfig":"48"},{"size":922,"mtime":1627259302288,"results":"76","hashOfConfig":"48"},{"size":3861,"mtime":1628472976477,"results":"77","hashOfConfig":"48"},{"size":1848,"mtime":1627461661578,"results":"78","hashOfConfig":"48"},{"size":396,"mtime":1627259302291,"results":"79","hashOfConfig":"48"},{"size":1257,"mtime":1629246306288,"results":"80","hashOfConfig":"48"},{"size":642,"mtime":1628149701283,"results":"81","hashOfConfig":"48"},{"size":899,"mtime":1628148932183,"results":"82","hashOfConfig":"48"},{"size":662,"mtime":1627462027231,"results":"83","hashOfConfig":"48"},{"size":1351,"mtime":1628145909659,"results":"84","hashOfConfig":"48"},{"size":824,"mtime":1628145890181,"results":"85","hashOfConfig":"48"},{"size":1794,"mtime":1628490307801,"results":"86","hashOfConfig":"48"},{"size":2229,"mtime":1628490485662,"results":"87","hashOfConfig":"48"},{"size":6018,"mtime":1628497401172,"results":"88","hashOfConfig":"48"},{"size":7355,"mtime":1629247108943,"results":"89","hashOfConfig":"48"},{"size":1186,"mtime":1612860529627,"results":"90","hashOfConfig":"48"},{"size":8153,"mtime":1628493005999,"results":"91","hashOfConfig":"48"},{"size":2396,"mtime":1629245742889,"results":"92","hashOfConfig":"48"},{"size":3431,"mtime":1629246549281,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"a2f6lq",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"96"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"96"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\index.tsx",[],["214","215"],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\reportWebVitals.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\App.tsx",["216"],"import React, {useEffect} from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './App.css';\r\nimport {\r\n    StylesProvider,\r\n    ThemeProvider as MuiThemeProvider,\r\n    jssPreset,\r\n} from \"@material-ui/core/styles\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport {ThemeProvider} from \"styled-components/macro\";\r\nimport {create} from \"jss\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Routes from \"./routes/Routes\";\r\nimport createTheme from \"./theme\";\r\nimport {AppStateType} from \"./redux/reducers\";\r\nimport {THEMES} from \"./constants\";\r\nimport {setTheme} from \"./redux/actions/themeActions\";\r\n\r\nconst jss = create({\r\n    ...jssPreset(),\r\n    insertionPoint: document.getElementById(\"jss-insertion-point\")!,\r\n});\r\n\r\nfunction App() {\r\n    const theme = useSelector((state: AppStateType) => state.themeReducer);\r\n    const dispatcher = useDispatch();\r\n\r\n    useEffect(() => {\r\n        settingTheme();\r\n        redirecting();\r\n    }, [])\r\n\r\n    // 테마 적용 함수\r\n    const settingTheme = () => {\r\n        dispatcher(setTheme(THEMES.DARK));\r\n        console.log(\"currentTheme\", theme.currentTheme);\r\n    }\r\n\r\n    // root redirecting\r\n    const redirecting = () => {\r\n        let url = new URL(window.location.href);\r\n\r\n        if(url.pathname === \"/\")\r\n            window.location.href = '/aCarLog';\r\n    }\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <Helmet\r\n            titleTemplate=\"%s | ACL App\"\r\n            defaultTitle=\"ACL App - A Car Log System\"\r\n        />\r\n        <StylesProvider jss={jss}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <MuiThemeProvider theme={createTheme(\"acl\", theme.currentTheme)}>\r\n              <ThemeProvider theme={createTheme(\"acl\", theme.currentTheme)}>\r\n                  <Routes/>\r\n              </ThemeProvider>\r\n            </MuiThemeProvider>\r\n          </MuiPickersUtilsProvider>\r\n        </StylesProvider>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\store\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\actions\\themeActions.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\Routes.tsx",["217"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport AuthLayout from \"../layouts/Auth\";\r\nimport DashboardLayout from \"../layouts/Dashboard\";\r\nimport Page404 from \"../pages/exception/Page404\";\r\nimport {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport MenuRoutes from \"./MenuRoutes\";\r\nimport LogOutRoutes from \"./LogOutRoutes\";\r\n\r\n\r\nconst childRoutes = (Layout: React.ElementType, routes: Array<RouteType>) =>\r\n  routes.map(\r\n    ({ component: Component, guard, children, path }, index: number) => {\r\n      const Guard = guard || React.Fragment;\r\n\r\n      return children ? (\r\n        children.map((element, index: number) => {\r\n          const Guard = element.guard || React.Fragment;\r\n\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={element.path}\r\n              exact\r\n              render={(props: RouteComponentProps) => (\r\n                <Guard>\r\n                  <Layout>\r\n                    <element.component {...props} />\r\n                  </Layout>\r\n                </Guard>\r\n              )}\r\n            />\r\n          );\r\n        })\r\n      ) : Component ? (\r\n        <Route\r\n          key={index}\r\n          path={path}\r\n          exact\r\n          render={(props) => (\r\n            <Guard>\r\n              <Layout>\r\n                <Component {...props} />\r\n              </Layout>\r\n            </Guard>\r\n          )}\r\n        />\r\n      ) : null;\r\n    }\r\n  );\r\n\r\n\r\nconst Routes = () => {\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n    return (<Router>\r\n        <Switch>\r\n            {userAuth.isAuth?\r\n                childRoutes(DashboardLayout, MenuRoutes())\r\n            : childRoutes(DashboardLayout, LogOutRoutes())}\r\n            <Route\r\n                render={() => (\r\n                    <AuthLayout>\r\n                        <Page404 />\r\n                    </AuthLayout>\r\n                )}\r\n            />\r\n        </Switch>\r\n    </Router>);\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\index.ts",["218"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport variants from \"./variants\";\r\nimport typography from \"./typography\";\r\nimport overrides from \"./overrides\";\r\nimport breakpoints from \"./breakpoints\";\r\nimport props from \"./props\";\r\nimport shadows from \"./shadows\";\r\nimport aclTheme from \"./aclTheme\";\r\n\r\nconst createTheme = (themeType:string, name: string) => {\r\n  let themeConfig = themeType == \"acl\" ? aclTheme.find((aclTheme) => aclTheme.name === name) : variants.find((variant) => variant.name === name);\r\n\r\n  if (!themeConfig) {\r\n    console.warn(new Error(`The theme ${name} is not valid`));\r\n    themeConfig = variants[0];\r\n  }\r\n\r\n  return createMuiTheme(\r\n    {\r\n      spacing: 4,\r\n      breakpoints: breakpoints,\r\n      overrides: overrides,\r\n      props: props,\r\n      typography: typography,\r\n      shadows: shadows,\r\n      palette: themeConfig.palette,\r\n    },\r\n    {\r\n      name: themeConfig.name,\r\n      header: themeConfig.header,\r\n      footer: themeConfig.footer,\r\n      sidebar: themeConfig.sidebar,\r\n    }\r\n  );\r\n};\r\n\r\nexport default createTheme;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\constants\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\themeReducer.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\authStore.tsx",["219"],"import React from \"react\";\r\nimport {AuthData} from \"../../model/User\";\r\n\r\nexport interface UserAuth {\r\n    isAuth: boolean,\r\n    user: AuthData|null,\r\n}\r\n\r\nexport const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\ninterface UserLoginAction {\r\n    type: typeof USER_LOGIN,\r\n    payload: UserAuth\r\n}\r\n\r\ninterface UserLogoutAction {\r\n    type: typeof USER_LOGOUT\r\n}\r\n\r\nexport type UserAuthActionTypes = UserLoginAction | UserLogoutAction;\r\n\r\nexport function setCurrentUserInfo(userAuth:UserAuth) : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: userAuth\r\n    };\r\n}\r\n\r\nexport function userLogout() : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGOUT\r\n    };\r\n}\r\n\r\n//\r\n//  상태 초기값 설정\r\nconst initialState: UserAuth = {\r\n    isAuth: false,\r\n    user: null,\r\n}\r\n\r\nexport function userAuthReducer(state= initialState, action : UserAuthActionTypes) : UserAuth {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN: return {\r\n            isAuth: true,\r\n            user: action.payload.user\r\n        }\r\n        case USER_LOGOUT: return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\authMenuStore.tsx",["220"],"import React from \"react\";\r\nimport {UserMenu} from \"../../model/Menu\";\r\n\r\n\r\nexport interface UserAuthMenu {\r\n    menus : UserMenu[]\r\n}\r\n\r\nexport const SET_USER_MENU = \"SET_USER_MENU\";\r\n\r\ninterface SetUserAuthMenuAction {\r\n    type: typeof SET_USER_MENU\r\n    payload: UserMenu[]\r\n}\r\n\r\nexport type UserAuthActionTypes = SetUserAuthMenuAction;\r\n\r\nexport function setUserAuthMenu(menus:UserMenu[]) {\r\n    return {\r\n        type: SET_USER_MENU,\r\n        payload: menus\r\n    };\r\n}\r\n\r\nconst initialState : UserMenu[] = [];\r\n\r\nexport function userAuthMenuReducer(state=initialState, action:UserAuthActionTypes) {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER_MENU\": return {\r\n            menus: action.payload as UserMenu[]\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}",["221","222"],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\MenuRoutes.tsx",["223","224","225","226","227","228","229","230","231","232","233","234","235"],"import {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {\r\n    Codesandbox,\r\n    Monitor,\r\n    ShoppingCart,\r\n    PieChart,\r\n    Sliders,\r\n    Users, IconProps, Calendar, Grid, Shield, Play, Smartphone, GitPullRequest,\r\n} from \"react-feather\";\r\nimport React from \"react\";\r\nimport async from \"../components/Async\";\r\n\r\n// DashBoard\r\nconst Dashboard = async(() => import(\"../pages/dashboard/Dashboard\"));\r\nconst CarMaster = async(() => import(\"../pages/master/VehicleMaster\"));\r\nconst VehiclePage = async(() => import(\"../pages/vehicle/VehiclePage\"));\r\n\r\n\r\nexport const MenuRoutes = (): Array<RouteType> => {\r\n    let routeMenus: Array<RouteType> = [];\r\n\r\n    routeMenus.push(\r\n        {\r\n            id: \"DashBoard\",\r\n            path: \"/aCarLog\",\r\n            header: \"Test\",\r\n            icon: <Sliders/>,\r\n            component: Dashboard,\r\n            children: null,\r\n        },\r\n        {\r\n            id: \"Master\",\r\n            path: \"/aCarLog/master\",\r\n            header: \"Test\",\r\n            icon: <Sliders/>,\r\n            component: null,\r\n            children: [\r\n                {\r\n                    path: \"/aCarLog/master/default\",\r\n                    name: \"Default\",\r\n                    component: Dashboard,\r\n                },\r\n                {\r\n                    path: \"/aCarLog/master/carMaster\",\r\n                    name: \"CarMaster\",\r\n                    component: CarMaster,\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            id: \"VehiclePage\",\r\n            path: \"/aCarLog/VehiclePage\",\r\n            header: \"VehiclePage\",\r\n            icon: <Sliders/>,\r\n            component: VehiclePage,\r\n            children: null,\r\n        }\r\n        );\r\n\r\n    return routeMenus;\r\n}\r\n\r\nexport default MenuRoutes;","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\layouts\\Auth.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\layouts\\Dashboard.tsx",["236","237"],"import React, {useState} from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {GlobalStyleProps} from \"../types/styles\";\r\nimport {RouteType} from \"../types/routes\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Header from \"../components/AppBar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Settings from \"../components/Settings\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {\r\n    Hidden,\r\n    CssBaseline,\r\n    Paper as MuiPaper,\r\n    withWidth,\r\n} from \"@material-ui/core\";\r\n\r\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\r\nimport {LoadingProgressBar} from \"../components/ProgressBar\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\n\r\nconst drawerWidth = 258;\r\n\r\nconst GlobalStyle = createGlobalStyle<GlobalStyleProps>`\r\n  html,\r\n  body,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background: ${(props) => props.theme.palette.background.default};\r\n  }\r\n\r\n  .MuiCardHeader-action .MuiIconButton-root {\r\n    padding: 4px;\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Drawer = styled.div`\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    width: ${drawerWidth}px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst AppContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst MainContent = styled(Paper)`\r\n  flex: 1;\r\n  background: ${(props) => props.theme.palette.background.default};\r\n\r\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n    flex: none;\r\n  }\r\n\r\n  .MuiPaper-root .MuiPaper-root {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\ntype DashboardPropsType = {\r\n    routes: Array<RouteType>;\r\n    width: \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\";\r\n};\r\n\r\nconst Dashboard: React.FC<DashboardPropsType> = ({\r\n                                                     children,\r\n                                                     routes,\r\n                                                     width,\r\n                                                 }) => {\r\n\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const pageState = useTypedSelector(state => state.pageState);\r\n\r\n    return (\r\n        <Root>\r\n            <CssBaseline/>\r\n            <GlobalStyle/>\r\n            <Drawer>\r\n                <Hidden mdUp implementation=\"js\">\r\n                    <Sidebar\r\n                        routes={routes}\r\n                        PaperProps={{style: {width: drawerWidth}}}\r\n                        variant=\"temporary\"\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                    />\r\n                </Hidden>\r\n                <Hidden smDown implementation=\"css\">\r\n                    <Sidebar\r\n                        routes={routes}\r\n                        PaperProps={{style: {width: drawerWidth}}}\r\n                    />\r\n                </Hidden>\r\n            </Drawer>\r\n            <AppContent>\r\n                <Header onDrawerToggle={handleDrawerToggle}/>\r\n                <MainContent p={isWidthUp(\"lg\", width) ? 12 : 5}>\r\n                    {children}\r\n                </MainContent>\r\n                {/*<Footer/>*/}\r\n            </AppContent>\r\n            <LoadingProgressBar isOpen={pageState.isLoading}/>\r\n            {/*테마 고르는 컴포넌트\r\n      <Settings/>*/}\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport default withWidth()(Dashboard);\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\exception\\Page404.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\typography.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\variants.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\breakpoints.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\overrides.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\shadows.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\props.ts",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\theme\\aclTheme.ts",["238","239","240"],"import merge from \"deepmerge\";\r\nimport { green, grey, indigo, red } from \"@material-ui/core/colors\";\r\nimport { THEMES } from \"../constants\";\r\n\r\nconst defaultColor = {\r\n    50: \"#e9f0fb\",\r\n    100: \"#c8daf4\",\r\n    200: \"#a3c1ed\",\r\n    300: \"#7ea8e5\",\r\n    400: \"#6395e0\",\r\n    500: \"#4782da\",\r\n    600: \"#407ad6\",\r\n    700: \"#376fd0\",\r\n    800: \"#2f65cb\",\r\n    900: \"#2052c2 \",\r\n};\r\n\r\nconst darkColor = {\r\n    100: \"#919191\",\r\n    200: \"#7d7d7d\",\r\n    300: \"#616161\",\r\n    400: \"#3d3d3d\",\r\n    500: \"#080808\"\r\n};\r\n\r\nconst turquoiseColor = {\r\n    100: \"#b3ecec\",\r\n    200: \"#89ecda\",\r\n    300: \"#43e8d8\",\r\n    400: \"#40e0d0\",\r\n    500: \"#3bd6c6\",\r\n};\r\n\r\nconst ivoryColor = {\r\n    100: \"#faf0e6\",\r\n    200: \"#fff5ee\",\r\n    300: \"#fdf5e6\",\r\n    400: \"#faf0e6\",\r\n    500: \"#faebd7\",\r\n};\r\n\r\nconst yGreenColor = {\r\n    100: \"#f9f486\",\r\n    200: \"#e9f486\",\r\n    300: \"#d9f486\",\r\n    400: \"#c9f486\",\r\n    500: \"#b9f486\",\r\n};\r\n\r\nconst dGreenColor = {\r\n    100: \"#75876e\",\r\n    200: \"#697a63\",\r\n    300: \"#5e6c58\",\r\n    400: \"#525f4d\",\r\n    500: \"#465142\",\r\n};\r\n\r\nconst defaultACLTheme = {\r\n    name: THEMES.DEFAULT,\r\n    palette: {\r\n        type: \"light\",\r\n        primary: {\r\n            main: turquoiseColor[400],\r\n            contrastText: \"#FFF\",\r\n        },\r\n        secondary: {\r\n            main: turquoiseColor[200],\r\n            contrastText: \"#FFF\",\r\n        },\r\n        background: {\r\n            default: turquoiseColor[300],\r\n            paper: \"#FFF\",\r\n        },\r\n    },\r\n    header: {\r\n        color: grey[500],\r\n        background: \"#FFF\",\r\n        search: {\r\n            color: grey[800],\r\n        },\r\n        indicator: {\r\n            background: turquoiseColor[300],\r\n        },\r\n    },\r\n    footer: {\r\n        color: grey[500],\r\n        background: \"#FFF\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: turquoiseColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: ivoryColor[300],\r\n            brand: {\r\n                color: ivoryColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: green[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#FFF\",\r\n            background: yGreenColor[300],\r\n        },\r\n    },\r\n};\r\n\r\nconst darkACLTheme = merge(defaultACLTheme, {\r\n    name: THEMES.DARK,\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: darkColor[500],\r\n            contrastText: \"#fab219\",\r\n        },\r\n        background: {\r\n            default: darkColor[100],\r\n            paper: darkColor[200],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n    header: {\r\n        color: darkColor[500],\r\n        background: \"#1B2635\",\r\n        search: {\r\n            color: darkColor[500],\r\n        },\r\n    },\r\n    footer: {\r\n        color: darkColor[500],\r\n        background: \"#233044\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: darkColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: darkColor[300],\r\n            brand: {\r\n                color: darkColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: darkColor[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#233044\",\r\n            background: darkColor[300],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n});\r\n\r\nconst greenACLTheme = merge(defaultACLTheme, {\r\n    name: THEMES.GREEN,\r\n    palette: {\r\n        type: \"green\",\r\n        primary: {\r\n            main: dGreenColor[500],\r\n            contrastText: \"#233044\",\r\n        },\r\n        background: {\r\n            default: dGreenColor[100],\r\n            paper: dGreenColor[200],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n    header: {\r\n        color: yGreenColor[500],\r\n        background: \"#1B2635\",\r\n        search: {\r\n            color: dGreenColor[500],\r\n        },\r\n    },\r\n    footer: {\r\n        color: dGreenColor[500],\r\n        background: \"#233044\",\r\n    },\r\n    sidebar: {\r\n        color: grey[200],\r\n        background: dGreenColor[400],\r\n        header: {\r\n            color: grey[200],\r\n            background: dGreenColor[300],\r\n            brand: {\r\n                color: dGreenColor[300],\r\n            },\r\n        },\r\n        footer: {\r\n            color: grey[200],\r\n            background: \"#6ec7d3\",\r\n            online: {\r\n                background: dGreenColor[500],\r\n            },\r\n        },\r\n        badge: {\r\n            color: \"#233044\",\r\n            background: dGreenColor[300],\r\n        },\r\n        text: {\r\n            primary: \"rgba(255, 255, 255, 0.95)\",\r\n            secondary: \"rgba(255, 255, 255, 0.5)\",\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst aclTheme: Array<ACLType> = [\r\n    defaultACLTheme,\r\n    darkACLTheme,\r\n    greenACLTheme\r\n];\r\n\r\nexport default aclTheme;\r\n\r\nexport type ACLType = {\r\n    name: string;\r\n    palette: {\r\n        primary: MainContrastTextType;\r\n        secondary: MainContrastTextType;\r\n    };\r\n    header: ColorBgType & {\r\n        search: {\r\n            color: string;\r\n        };\r\n        indicator: {\r\n            background: string;\r\n        };\r\n    };\r\n    footer: ColorBgType;\r\n    sidebar: ColorBgType & {\r\n        header: ColorBgType & {\r\n            brand: {\r\n                color: string;\r\n            };\r\n        };\r\n        footer: ColorBgType & {\r\n            online: {\r\n                background: string;\r\n            };\r\n        };\r\n        badge: ColorBgType;\r\n    };\r\n};\r\n\r\ntype MainContrastTextType = {\r\n    main: string;\r\n    contrastText: string;\r\n};\r\ntype ColorBgType = {\r\n    color: string;\r\n    background: string;\r\n};\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\login\\Login.tsx",["241","242","243","244","245","246","247","248","249","250","251","252"],"import * as React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {AuthAPI} from \"../../api/AuthAPI\";\r\nimport {AuthData, UserData} from \"../../model/User\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reducers\";\r\nimport {setTheme} from \"../../redux/actions/themeActions\";\r\nimport {THEMES} from \"../../constants\";\r\nimport {setCurrentUserInfo, UserAuth, userLogout} from \"../../redux/reducers/authStore\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {ColDef, DataGrid} from \"@material-ui/data-grid\";\r\nimport {useState} from \"react\";\r\nimport {LoadingProgressBar} from \"../../components/ProgressBar\";\r\nimport {setCurrentPageState} from \"../../redux/reducers/pageStore\";\r\n\r\nconst Login = () => {\r\n    const {UserLogin, GetUserData} = AuthAPI();\r\n    const dispatcher = useDispatch();\r\n\r\n    //클라이언트 ID (환경변수)\r\n    let googleClientId:string=process.env.REACT_APP_CLIENT_ID||\"\";\r\n    //사용자 정보를 담아둘 userObj\r\n    const [userObjState, setUserObjState]=React.useState(new AuthData())\r\n    //로그인 성공시 res처리\r\n    const onLoginSuccess=(res:any)=>{\r\n        // loading 플레그 변경\r\n        dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n        console.log(res);\r\n\r\n        let userObj:AuthData = new AuthData();\r\n        userObj.apiClientId = googleClientId;\r\n        userObj.apiClientToken = res.tokenId;\r\n\r\n        setUserObjState(userObj);\r\n        console.log(\"구글 로그인 성공\"+userObj);\r\n\r\n        UserLogin(userObj)\r\n            .then(res => {\r\n                userObj.acessToken = res.data.accessToken;\r\n                console.log(\"로그인 성공\"+res.data.accessToken);\r\n                GetUserData(userObj.acessToken).then(res => {\r\n\r\n                    console.log(\"GetUserData \");\r\n                    console.log(res.data);\r\n\r\n                    userObj.userData = res.data as UserData;\r\n\r\n                    console.log(userObj);\r\n\r\n                    // 사용자 정보 패치\r\n                    dispatcher(\r\n                        setCurrentUserInfo({\r\n                            isAuth: true,\r\n                            user: userObj,\r\n                        })\r\n                    );\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                dispatcher(\r\n                    userLogout()\r\n                );\r\n                console.log(\"로그인 실패\"+err);\r\n            }).finally(() => {\r\n            // loading 플레그 변경\r\n            dispatcher(setCurrentPageState({isLoading: false}));\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId = {googleClientId}\r\n                buttonText=\"Google\"\r\n                onSuccess={result=>onLoginSuccess(result)}\r\n                onFailure={result => console.log(result)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\AppBar.tsx",["253","254","255","256"],"import * as React from \"react\";\r\nimport styled, { withTheme } from \"styled-components/macro\";\r\nimport { darken } from \"polished\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  InputBase,\r\n  AppBar as MuiAppBar,\r\n  IconButton as MuiIconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\n\r\nconst AppBar = styled(MuiAppBar)`\r\n  background: ${(props) => props.theme.palette.background.default};\r\n  color: ${(props) => props.theme.header.color};\r\n`;\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Search = styled.div`\r\n  border-radius: 2px;\r\n  background-color: ${(props) => props.theme.header.background};\r\n  display: none;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => darken(0.05, props.theme.header.background)};\r\n  }\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SearchIconWrapper = styled.div`\r\n  width: 50px;\r\n  height: 100%;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Input = styled(InputBase)`\r\n  color: inherit;\r\n  width: 100%;\r\n\r\n  > input {\r\n    color: ${(props) => props.theme.header.search.color};\r\n    padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-left: ${(props) => props.theme.spacing(12)}px;\r\n    width: 160px;\r\n  }\r\n`;\r\n\r\ntype AppBarProps = {\r\n  theme: {};\r\n  onDrawerToggle: React.MouseEventHandler<HTMLElement>;\r\n};\r\n\r\nconst AppBarComponent: React.FC<AppBarProps> = ({ onDrawerToggle }) => {\r\n  const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <AppBar position=\"sticky\" elevation={0}>\r\n          <Toolbar>\r\n            <Grid container alignItems=\"center\">\r\n              <Hidden mdUp>\r\n                <Grid item>\r\n                  <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"Open drawer\"\r\n                      onClick={onDrawerToggle}\r\n                  >\r\n                    <MenuIcon/>\r\n                  </IconButton>\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item>\r\n                {/*<Search>\r\n              <SearchIconWrapper>\r\n                <SearchIcon />\r\n              </SearchIconWrapper>\r\n              <Input placeholder=\"Search topics\" />\r\n            </Search>*/}\r\n              </Grid>\r\n              <Grid item xs/>\r\n              <Grid item>\r\n                {userAuth.isAuth? null : <label>로그인 후 이용해 주세요.</label>}\r\n                <UserDropdown/>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default withTheme(AppBarComponent);\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Sidebar.tsx",["257","258","259","260","261","262","263"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { rgba } from \"polished\";\r\nimport { NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { darken } from \"polished\";\r\nimport { RouteType, RouteChildType } from \"../types/routes\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"../vendor/perfect-scrollbar.css\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Badge,\r\n  Box as MuiBox,\r\n  Chip,\r\n  Grid,\r\n  Avatar,\r\n  Collapse,\r\n  Drawer as MuiDrawer,\r\n  List as MuiList,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport MenuRoutes from \"../routes/MenuRoutes\";\r\nimport async from \"./Async\";\r\nimport {AppStateType, useTypedSelector} from \"../redux/reducers\";\r\nimport {useSelector} from \"react-redux\";\r\nimport LogOutRoutes from \"../routes/LogOutRoutes\";\r\n\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\nconst Drawer = styled(MuiDrawer)`\r\n  border-right: 0;\r\n\r\n  > div {\r\n    border-right: 0;\r\n  }\r\n`;\r\n\r\nconst Scrollbar = styled(PerfectScrollbar)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst List = styled(MuiList)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n`;\r\n\r\nconst Items = styled.div`\r\n  padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n`;\r\n\r\nconst Brand = styled(ListItem)<{\r\n  button?: boolean;\r\n  component?: React.ReactNode;\r\n  to?: string;\r\n}>`\r\n  font-size: ${(props) => props.theme.typography.h5.fontSize};\r\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n  color: ${(props) => props.theme.sidebar.header.color};\r\n  background-color: ${(props) => props.theme.sidebar.header.background};\r\n  font-family: ${(props) => props.theme.typography.fontFamily};\r\n  min-height: 56px;\r\n  padding-left: ${(props) => props.theme.spacing(6)}px;\r\n  padding-right: ${(props) => props.theme.spacing(6)}px;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"sm\")} {\r\n    min-height: 64px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.sidebar.header.background};\r\n  }\r\n`;\r\n\r\nconst BrandIcon = styled.img`\r\n  margin-right: ${(props) => props.theme.spacing(2)}px;\r\n  color: ${(props) => props.theme.sidebar.header.brand.color};\r\n  fill: ${(props) => props.theme.sidebar.header.brand.color};\r\n  width: 40px;\r\n  height: 35px;\r\n`;\r\n\r\nconst BrandChip = styled(Chip)`\r\n  background-color: ${green[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 55%;\r\n  height: 18px;\r\n  margin-left: 2px;\r\n  margin-top: -16px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\ntype CategoryType = {\r\n  activeClassName?: string;\r\n  button?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n  component?: typeof NavLink;\r\n  exact?: boolean;\r\n};\r\n\r\nconst Category = styled(ListItem)<CategoryType>`\r\n  padding-top: ${(props) => props.theme.spacing(3)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(3)}px;\r\n  padding-left: ${(props) => props.theme.spacing(8)}px;\r\n  padding-right: ${(props) => props.theme.spacing(7)}px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightRegular};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n      darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryText = styled(ListItemText)`\r\n  margin: 0;\r\n  span {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n    padding: 0 ${(props) => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryIconLess = styled(ExpandLess)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst CategoryIconMore = styled(ExpandMore)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst Link = styled(ListItem)<{\r\n  activeClassName: string;\r\n  component: typeof NavLink;\r\n  exact: boolean;\r\n  to: string;\r\n}>`\r\n  padding-left: ${(props) => props.theme.spacing(17.5)}px;\r\n  padding-top: ${(props) => props.theme.spacing(2)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2)}px;\r\n\r\n  span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.7)};\r\n  }\r\n\r\n  &:hover span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.9)};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      darken(0.015, props.theme.sidebar.background)};\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n      darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkText = styled(ListItemText)`\r\n  color: ${(props) => props.theme.sidebar.color};\r\n  span {\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n  }\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst LinkBadge = styled(Chip)`\r\n  font-size: 11px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightBold};\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 28px;\r\n  top: 8px;\r\n  background: ${(props) => props.theme.sidebar.badge.background};\r\n\r\n  span.MuiChip-label,\r\n  span.MuiChip-label:hover {\r\n    cursor: pointer;\r\n    color: ${(props) => props.theme.sidebar.badge.color};\r\n    padding-left: ${(props) => props.theme.spacing(2)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryBadge = styled(LinkBadge)`\r\n  top: 12px;\r\n`;\r\n\r\n\r\ntype SidebarCategoryPropsType = {\r\n  name: string;\r\n  icon: JSX.Element;\r\n  classes?: string;\r\n  isOpen?: boolean;\r\n  isCollapsable: boolean;\r\n  badge?: string | number;\r\n  activeClassName?: string;\r\n  button: true;\r\n  onClick?: () => void;\r\n  to?: string;\r\n  component?: typeof NavLink;\r\n  exact?: boolean;\r\n};\r\n\r\nconst SidebarCategory: React.FC<SidebarCategoryPropsType> = ({\r\n  name,\r\n  icon,\r\n  classes,\r\n  isOpen,\r\n  isCollapsable,\r\n  badge,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Category {...rest}>\r\n      {icon}\r\n      <CategoryText>{name}</CategoryText>\r\n      {isCollapsable ? (\r\n        isOpen ? (\r\n          <CategoryIconMore />\r\n        ) : (\r\n          <CategoryIconLess />\r\n        )\r\n      ) : null}\r\n      {badge ? <CategoryBadge label={badge} /> : \"\"}\r\n    </Category>\r\n  );\r\n};\r\n\r\ntype SidebarLinkPropsType = {\r\n  name: string;\r\n  to: string;\r\n  badge?: string | number;\r\n  icon?: JSX.Element;\r\n};\r\n\r\nconst SidebarLink: React.FC<SidebarLinkPropsType> = ({\r\n  name,\r\n  to,\r\n  badge,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Link\r\n      button\r\n      dense\r\n      component={NavLink}\r\n      exact\r\n      to={to}\r\n      activeClassName=\"active\"\r\n    >\r\n      <LinkText>{name}</LinkText>\r\n      {badge ? <LinkBadge label={badge} /> : \"\"}\r\n    </Link>\r\n  );\r\n};\r\n\r\ntype SidebarPropsType = {\r\n  classes?: string;\r\n  staticContext: string;\r\n  location: {\r\n    pathname: string;\r\n  };\r\n  routes: Array<RouteType>;\r\n  PaperProps: {\r\n    style: {\r\n      width: number;\r\n    };\r\n  };\r\n  variant?: \"permanent\" | \"persistent\" | \"temporary\";\r\n  open?: boolean;\r\n  onClose?: () => void;\r\n};\r\n\r\nconst Sidebar: React.FC<RouteComponentProps & SidebarPropsType> = ({\r\n  classes,\r\n  staticContext,\r\n  location,\r\n  ...rest\r\n}) => {\r\n  type tplotOptions = {\r\n    [key: number]: boolean;\r\n  };\r\n\r\n  const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n  const initOpenRoutes = (): tplotOptions => {\r\n    /* Open collapse element that matches current url */\r\n    const pathName = location.pathname;\r\n    const routes = MenuRoutes();\r\n    let _routes = {};\r\n\r\n    routes.forEach((route: RouteType, index) => {\r\n      const isActive = pathName.indexOf(route.path) === 0;\r\n      const isOpen = route.open;\r\n      const isHome = route.containsHome && pathName === \"/\";\r\n\r\n      _routes = Object.assign({}, _routes, {\r\n        [index]: isActive || isOpen || isHome,\r\n      });\r\n    });\r\n\r\n    return _routes;\r\n  };\r\n\r\n  const [openRoutes, setOpenRoutes] = useState(() => initOpenRoutes());\r\n\r\n  const toggle = (index: number) => {\r\n    // Collapse all elements\r\n    Object.keys(openRoutes).forEach(\r\n      (item) =>\r\n        openRoutes[index] ||\r\n        setOpenRoutes((openRoutes) =>\r\n          Object.assign({}, openRoutes, { [item]: false })\r\n        )\r\n    );\r\n\r\n    // Toggle selected element\r\n    setOpenRoutes((openRoutes) =>\r\n      Object.assign({}, openRoutes, { [index]: !openRoutes[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...rest}>\r\n      <Brand component={NavLink} to=\"/aCarLog\" button>\r\n        <BrandIcon src=\"/main-logo2.png\"/>{\" \"}\r\n        <Box ml={1}>\r\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">JG Project Solution</Typography>\r\n        </Box>\r\n      </Brand>\r\n      <Scrollbar>\r\n        <List disablePadding>\r\n          <Items>\r\n            {userAuth.isAuth ? MenuRoutes().map((category: RouteType, index) => (\r\n              <React.Fragment key={index}>\r\n\r\n\r\n                {category.children && category.icon ? (\r\n                  <React.Fragment key={index}>\r\n                    <SidebarCategory\r\n                      isOpen={!openRoutes[index]}\r\n                      isCollapsable={true}\r\n                      name={category.id}\r\n                      icon={category.icon}\r\n                      button={true}\r\n                      onClick={() => toggle(index)}\r\n                    />\r\n\r\n                    <Collapse\r\n                      in={openRoutes[index]}\r\n                      timeout=\"auto\"\r\n                      unmountOnExit\r\n                    >\r\n                      {category.children.map(\r\n                        (route: RouteChildType, index: number) => (\r\n                          <SidebarLink\r\n                            key={index}\r\n                            name={route.name}\r\n                            to={route.path}\r\n                            icon={route.icon}\r\n                            badge={route.badge}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </Collapse>\r\n                  </React.Fragment>\r\n                ) : category.icon ? (\r\n                  <SidebarCategory\r\n                    isCollapsable={false}\r\n                    name={category.id}\r\n                    to={category.path}\r\n                    activeClassName=\"active\"\r\n                    component={NavLink}\r\n                    icon={category.icon}\r\n                    exact\r\n                    button\r\n                    badge={category.badge}\r\n                  />\r\n                ) : null}\r\n              </React.Fragment>\r\n            )) :\r\n                LogOutRoutes().map((category: RouteType, index) => (\r\n                    <React.Fragment key={index}>\r\n\r\n\r\n                      {category.children && category.icon ? (\r\n                          <React.Fragment key={index}>\r\n                            <SidebarCategory\r\n                                isOpen={!openRoutes[index]}\r\n                                isCollapsable={true}\r\n                                name={category.id}\r\n                                icon={category.icon}\r\n                                button={true}\r\n                                onClick={() => toggle(index)}\r\n                            />\r\n\r\n                            <Collapse\r\n                                in={openRoutes[index]}\r\n                                timeout=\"auto\"\r\n                                unmountOnExit\r\n                            >\r\n                              {category.children.map(\r\n                                  (route: RouteChildType, index: number) => (\r\n                                      <SidebarLink\r\n                                          key={index}\r\n                                          name={route.name}\r\n                                          to={route.path}\r\n                                          icon={route.icon}\r\n                                          badge={route.badge}\r\n                                      />\r\n                                  )\r\n                              )}\r\n                            </Collapse>\r\n                          </React.Fragment>\r\n                      ) : category.icon ? (\r\n                          <SidebarCategory\r\n                              isCollapsable={false}\r\n                              name={category.id}\r\n                              to={category.path}\r\n                              activeClassName=\"active\"\r\n                              component={NavLink}\r\n                              icon={category.icon}\r\n                              exact\r\n                              button\r\n                              badge={category.badge}\r\n                          />\r\n                      ) : null}\r\n                    </React.Fragment>\r\n                ))}\r\n          </Items>\r\n        </List>\r\n      </Scrollbar>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\dashboard\\Dashboard.tsx",["264"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\n\r\nimport {\r\n    Grid,\r\n    Divider as MuiDivider,\r\n    Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction DashBoard() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid justify=\"space-between\" container spacing={6}>\r\n                <Grid item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        Dashboard\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Divider my={6} />\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    안녕하세요. ACL(A Car Log) 시스템 입니다.\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    이것은 현재 개발중인 사내 차량 운행 일지 시스템 입니다.\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n                    많은 관심 부탁드립니다.\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} lg={8}>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    ReactJS + Typescript + MaterialUI + JG\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} lg={8}>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DashBoard;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\master\\VehicleMaster.tsx",["265","266","267","268","269","270","271"],"import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport imgCar_1 from \"../../../public/mcb2.jpg\"\r\n\r\nimport {\r\n    Grid,\r\n    Divider as MuiDivider,\r\n    Typography as MuiTypography, Paper as MuiPaper, Button as MuiButton,\r\n} from \"@material-ui/core\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {CustomCard} from \"../../components/CustomCard\";\r\nimport {VehicleAPI} from \"../../api/VehicleAPI\";\r\nimport {CellParams, ColDef, DataGrid} from \"@material-ui/data-grid\";\r\nimport {DrivingLog, VehicleData} from \"../../model/Vehicle\";\r\nimport {Edit2, Trash2} from \"react-feather\";\r\nimport {setCurrentPageState} from \"../../redux/reducers/pageStore\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Paper = styled(MuiPaper)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction VehicleMaster() {\r\n    const [vehiclesList, setVehiclesList] = useState<VehicleData[]>([]);\r\n\r\n    const dispatcher = useDispatch();\r\n    const {GetVehiclesList} = VehicleAPI();\r\n\r\n    useEffect(() => {\r\n        // loading 플레그 변경\r\n        dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n        GetVehiclesList().then(res => {\r\n            console.log(res.data)\r\n            setVehiclesList(res.data as VehicleData[]);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }).finally(() => {\r\n            // loading 플레그 변경\r\n            dispatcher(setCurrentPageState({isLoading: false}));\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    /**------------------------------------------\r\n     *  Data grid column 선언\r\n     *-------------------------------------------*/\r\n    const columns: ColDef[] = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"ID\",\r\n            width: 100,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            sortable: false,\r\n\r\n        },\r\n        {\r\n            field: \"model\",\r\n            headerName: \"Model\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"modelYear\",\r\n            headerName: \"연식\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"name\",\r\n            headerName: \"이름\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"odometer\",\r\n            headerName: \"주행거리\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"vehicleNumber\",\r\n            headerName: \"차량번호\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"odometer\",\r\n            headerName: \"운행 거리\",\r\n            width: 150,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n        },\r\n        {\r\n            field: \"modifyAction\",\r\n            headerName: \"수정\",\r\n            width: 100,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            renderCell: (params: CellParams) => {\r\n                /*let opCode: string = String(params.getValue(\"opCode\"));\r\n                let opType: string = String(params.getValue(\"opType\"));\r\n                let opName: string = String(params.getValue(\"opName\"));\r\n\r\n                const paramObject = new OperationGroup();\r\n                paramObject.opCode = opCode;\r\n                paramObject.opType = opType;\r\n                paramObject.opName = opName;*/\r\n\r\n                return (\r\n                    <Grid container justify=\"center\">\r\n                        <a ><Edit2 style={{cursor: 'pointer'}}/></a>\r\n                    </Grid>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: \"deleteAction\",\r\n            headerName: \"삭제\",\r\n            width: 100,\r\n            headerAlign: \"center\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            renderCell: (params: CellParams) => {\r\n\r\n\r\n                return (\r\n                    <Grid container justify=\"center\">\r\n                        <a><Trash2 style={{cursor: 'pointer'}}/></a>\r\n                    </Grid>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid justify=\"space-between\" container spacing={6}>\r\n                <Grid item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        CarMaster\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Divider my={6}/>\r\n\r\n            <Paper>\r\n                <div style={{height: 500, width: '100%' }}>\r\n                    <DataGrid\r\n                        showToolbar\r\n                        columns={columns}\r\n                        rows={vehiclesList}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default VehicleMaster;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Async.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\CustomCard.tsx",["272","273","274","275","276","277","278","279","280","281"],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\UserDropdown.tsx",["282"],"import * as React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Power } from \"react-feather\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Tooltip,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton as MuiIconButton,\r\n} from \"@material-ui/core\";\r\nimport {userLogout} from \"../redux/reducers/authStore\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport Login from \"../pages/login/Login\";\r\n\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nfunction UserDropdown() {\r\n  const [anchorMenu, setAnchorMenu] = React.useState<any>(null);\r\n  const userAuth = useTypedSelector(state => state.userAuth);\r\n  const dispatcher = useDispatch();\r\n\r\n  const toggleMenu = (event: React.SyntheticEvent) => {\r\n    setAnchorMenu(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorMenu(null);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    dispatcher(\r\n        userLogout()\r\n    );\r\n\r\n    closeMenu();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tooltip title=\"Account\">\r\n        <IconButton\r\n          aria-owns={Boolean(anchorMenu) ? \"menu-appbar\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={toggleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <Power />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorMenu}\r\n        open={Boolean(anchorMenu)}\r\n        onClose={closeMenu}\r\n      >\r\n        <MenuItem onClick={closeMenu}>Profile</MenuItem>\r\n        {userAuth.isAuth ? <MenuItem component={Link} to=\"/aCarLog\" onClick={handleSignOut}>Sign Out</MenuItem>\r\n            : <MenuItem onClick={closeMenu}><Login/></MenuItem> }\r\n\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\Loader.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\AuthAPI.tsx",["283","284","285"],"import authApi, {dataApi} from './IApi';\r\nimport {AxiosRequestConfig} from \"axios\";\r\nimport {AuthData} from \"../model/User\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport {VehicleData} from \"../model/Vehicle\";\r\n\r\nexport function AuthAPI() {\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n    const _api = authApi();\r\n    const _dataApi = dataApi(userAuth.user?.acessToken);\r\n\r\n    return {\r\n        /**\r\n         * 로그인\r\n         * @params 사용자 로그인 정보.\r\n         * @param params\r\n         */\r\n        UserLogin : function(params:AuthData){\r\n\r\n            return _api.post('/auth/login',\r\n                JSON.stringify({\r\n                        apiClientId:params.apiClientId,\r\n                        apiClientToken :params.apiClientToken\r\n                    })\r\n                );\r\n        },\r\n\r\n        GetUserData : function(accessToken:string){\r\n\r\n            return _api.get('/auth/me', {\r\n                'headers':{\r\n                    'X-AUTH-TOKEN': accessToken\r\n                }\r\n            });\r\n        },\r\n\r\n        // 특정차량 운행이련 조회\r\n        GetSelectUserData: function (userId: number) {\r\n\r\n            return _api.get('/users/' + userId);\r\n        },\r\n\r\n    }\r\n\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\IApi.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\model\\User.tsx",["286"],"import React from 'react';\r\n\r\n\r\nexport class AuthData {\r\n  public apiClientId:string;\r\n  public apiClientToken:string;\r\n  public acessToken:string;\r\n  public userData:UserData|null\r\n\r\n  constructor(apiClientId: string=\"\", apiClientToken: string=\"\", acessToken: string=\"\") {\r\n    this.apiClientId = apiClientId;\r\n    this.apiClientToken = apiClientToken;\r\n    this.acessToken = acessToken;\r\n    this.userData = null;\r\n  }\r\n}\r\n\r\nexport type UserData = {\r\n  authApis:AuthApis[],\r\n  department: Department,\r\n  position: Position,\r\n  email:String,\r\n  id:number,\r\n  imageUrl:String,\r\n  updateAt:String,\r\n  username:String\r\n}\r\n\r\ntype Department = {\r\n  id:number,\r\n  name:string\r\n}\r\n\r\ntype Position = {\r\n  id:number,\r\n  name:string\r\n}\r\n\r\nclass AuthApis{\r\n  public name:string;\r\n  public authList:AuthApis[] | [];\r\n\r\n  constructor(name:string = \"\") {\r\n    this.name = name;\r\n    this.authList = [];\r\n  }\r\n}\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\routes\\LogOutRoutes.tsx",["287"],"import {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {\r\n    Sliders,\r\n} from \"react-feather\";\r\nimport React from \"react\";\r\nimport async from \"../components/Async\";\r\n\r\n// DashBoard\r\nconst Dashboard = async(() => import(\"../pages/dashboard/Dashboard\"));\r\n\r\n\r\nexport const LogOutRoutes = (): Array<RouteType> => {\r\n    let routeMenus: Array<RouteType> = [];\r\n\r\n    routeMenus.push(\r\n        {\r\n            id: \"DashBoard\",\r\n            path: \"/aCarLog\",\r\n            header: \"Test\",\r\n            icon: <Sliders/>,\r\n            component: Dashboard,\r\n            children: null,\r\n        });\r\n\r\n    return routeMenus;\r\n}\r\n\r\nexport default LogOutRoutes;","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\ProgressBar.tsx",["288","289","290","291","292","293"],"import React from 'react';\r\nimport {\r\n  CardContent,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  CircularProgress as MuiCircularProgress,\r\n  Divider as MuiDivider,\r\n  LinearProgress as MuiLinearProgress,\r\n  Paper as MuiPaper,\r\n  Typography,\r\n  ListProps, Theme, createStyles, makeStyles, Backdrop,\r\n} from \"@material-ui/core\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Paper = styled(MuiPaper)(spacing);\r\nconst LinearProgress = styled(MuiLinearProgress)(spacing);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ntype LoadingProgressBarProps ={\r\n  isOpen:boolean,\r\n}\r\n\r\nexport function LoadingProgressBar(props:LoadingProgressBarProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.isOpen}>\r\n        <Card mb={6}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Loading...\r\n            </Typography>\r\n            <Paper mt={3}>\r\n              <LinearProgress my={2} color=\"secondary\" />\r\n            </Paper>\r\n          </CardContent>\r\n        </Card>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\redux\\reducers\\pageStore.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\api\\VehicleAPI.tsx",["294"],"import {dataApi} from './IApi';\r\nimport {AuthData} from \"../model/User\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport {DrivingLog, VehicleData} from \"../model/Vehicle\";\r\n\r\nexport function VehicleAPI() {\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n    const _api = dataApi(userAuth.user?.acessToken);\r\n\r\n    return {\r\n        /**\r\n         * 차량 운행이력 등록\r\n         */\r\n        PostDrivingLogInsert: function (DrivingLog: DrivingLog) {\r\n\r\n            return _api.post('/vehicles/' + DrivingLog.vehicleId+'/driving-logs',\r\n                JSON.stringify({\r\n                    driver: {\r\n                        id:userAuth.user?.userData?.id,\r\n                        username:userAuth.user?.userData?.username,\r\n                        email:userAuth.user?.userData?.email,\r\n                        imageUrl:userAuth.user?.userData?.imageUrl\r\n                    },\r\n                    startDateTime: new Date(DrivingLog.startDateTime).toISOString(),\r\n                    arriveDateTime: new Date(DrivingLog.arriveDateTime).toISOString(),\r\n                    startOdometer: DrivingLog.startOdometer,\r\n                    arriveOdometer: DrivingLog.arriveOdometer\r\n                })\r\n            );\r\n        },\r\n\r\n        // 차량정보 목록 조회\r\n        GetVehiclesList: function () {\r\n\r\n            return _api.get('/vehicles');\r\n        },\r\n\r\n        // 특정차량 운행이련 조회\r\n        GetVehiclesDriveLog: function (vehicleData: VehicleData) {\r\n\r\n            return _api.get('/vehicles/' + vehicleData.id+'/driving-logs');\r\n        },\r\n\r\n        // 특정차량정보 조회\r\n        GetVehicle: function (vehicleData: VehicleData) {\r\n\r\n            return _api.get('/vehicles/' + vehicleData.id);\r\n        }\r\n\r\n    }\r\n\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\VehiclePage.tsx",["295","296"],"import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n    Grid,\r\n    Divider as MuiDivider,\r\n    Typography as MuiTypography, Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {VehicleCard} from \"../../components/VehicleCard\";\r\nimport {VehicleAPI} from \"../../api/VehicleAPI\";\r\nimport {VehicleData} from \"../../model/Vehicle\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPageState} from \"../../redux/reducers/pageStore\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction VehiclePage() {\r\n\r\n    const {GetVehiclesList} = VehicleAPI();\r\n\r\n    const [vehicleList, setVehicleList] = React.useState<VehicleData[]>([]);\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // loading 플레그 변경\r\n        dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n        GetVehiclesList().then(res => {\r\n            console.log(res.data);\r\n            setVehicleList(res.data as VehicleData[]);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }).finally(() => {\r\n            // loading 플레그 변경\r\n            dispatcher(setCurrentPageState({isLoading: false}));\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid justify=\"space-between\" container spacing={6}>\r\n                <Grid item>\r\n                    <Typography variant=\"h3\" gutterBottom>\r\n                        VehiclePage\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Divider my={6}/>\r\n\r\n            <Grid container spacing={6}>\r\n                {vehicleList.map((value, index) => {\r\n                    return (\r\n                        <Grid key={index} item >\r\n                            <Paper>\r\n                                <VehicleCard\r\n                                    vehicleData={value}\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default VehiclePage;\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\VehicleCard.tsx",["297","298","299","300","301","302","303"],"import {Spinner} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Grid,\r\n    Link,\r\n    Breadcrumbs as MuiBreadcrumbs,\r\n    Button as MuiButton,\r\n    Card as MuiCard,\r\n    CardMedia as MuiCardMedia,\r\n    Divider as MuiDivider,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {VehicleData} from \"../model/Vehicle\";\r\nimport {VehicleAPI} from \"../api/VehicleAPI\";\r\nimport {DrivingLogModal} from \"../pages/vehicle/modal/DrivingLogModal\";\r\nimport {DrivingLogInsertModal} from \"../pages/vehicle/modal/DrivingLogInsertModal\";\r\nimport {VehicleManagerModal} from \"../pages/vehicle/modal/VehicleManagerModal\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst CardMedia = styled(MuiCardMedia)`\r\n  height: 220px;\r\n  background-image: url(\"/images/mcb2.jpg\");\r\n`;\r\n\r\n\r\ntype CardProps = {\r\n    vehicleData:VehicleData;\r\n}\r\n\r\nexport const VehicleCard = (props:CardProps) => {\r\n    const [imgURL, setImgUrl] = useState(\"/vanzS.JPG\");\r\n    const {GetVehicle} = VehicleAPI();\r\n    const [logDialogFlag, setLogDialogFlag] = useState(false);\r\n    const [logInsertFlag, setLogInsertFlag] = useState(false);\r\n    const [vehicleDetailFlag, setVehicleDetailFlag] = useState(false);\r\n\r\n    const [bindingVehicleData, setBindingVehicleData] = useState<VehicleData>(new VehicleData());\r\n\r\n\r\n    useEffect(()=>{\r\n        setBindingVehicleData(props.vehicleData);\r\n\r\n        if(props.vehicleData.imageUrl != null){\r\n            setImgUrl(props.vehicleData.imageUrl);\r\n        }\r\n    },[])\r\n\r\n    const insertClose = () => {\r\n\r\n        GetVehicle(props.vehicleData).then(res => {\r\n            let reBindingData = res.data as VehicleData;\r\n            setBindingVehicleData(reBindingData);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <Card>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    image={imgURL}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {bindingVehicleData.name?bindingVehicleData.name:\"Empty Product\"}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        <Grid container item xs={12} spacing={2} justify=\"flex-start\">\r\n\r\n                            <Grid item xs={5} sm={5}>\r\n                                <label>Model</label>\r\n                            </Grid>\r\n                            <Grid item xs={7} sm={7}>\r\n                                <label>{bindingVehicleData.model}</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5} sm={5}>\r\n                                <label>주행거리</label>\r\n                            </Grid>\r\n                            <Grid item xs={7} sm={7}>\r\n                                <label>{bindingVehicleData.odometer} km</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5} sm={5}>\r\n                                <label>연식</label>\r\n                            </Grid>\r\n                            <Grid item xs={7} sm={7}>\r\n                                <label>{bindingVehicleData.modelYear} 년식</label>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5} sm={5}>\r\n                                <label>차량번호</label>\r\n                            </Grid>\r\n                            <Grid item xs={7} sm={7}>\r\n                                <label>{bindingVehicleData.vehicleNumber}</label>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Grid container item xs={12} spacing={2} justify=\"center\">\r\n\r\n                    <Grid item xs={4} sm={4}>\r\n                        <Button size=\"small\" color=\"primary\" onClick = {() => {setLogDialogFlag(!logDialogFlag)}}>\r\n                            운행기록조회\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={4} sm={4}>\r\n                        <Button size=\"small\" color=\"primary\" onClick = {() => {setLogInsertFlag(!logInsertFlag)}}>\r\n                            운행기록등록\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={4} sm={4}>\r\n                        <Button size=\"small\" color=\"primary\" onClick = {() => {setVehicleDetailFlag(!vehicleDetailFlag)}}>\r\n                            차량관리자\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </CardActions>\r\n            <DrivingLogModal\r\n                title=\"차량 기록 일지\"\r\n                vehicleData={bindingVehicleData}\r\n                onClose={() => setLogDialogFlag(false)}\r\n                open={logDialogFlag}\r\n            />\r\n            <DrivingLogInsertModal\r\n                title=\"운행 기록 등록\"\r\n                vehicleData={bindingVehicleData}\r\n                onSubmit={insertClose}\r\n                onClose={() => setLogInsertFlag(false)}\r\n                open={logInsertFlag}\r\n            />\r\n            <VehicleManagerModal\r\n                title=\"관리자 정보\"\r\n                vehicleData={bindingVehicleData}\r\n                onClose={() => setVehicleDetailFlag(false)}\r\n                open={vehicleDetailFlag}\r\n            />\r\n        </Card>\r\n    )\r\n};\r\n","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\DrivingLogModal.tsx",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, {ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n  Button as MuiButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Divider as MuiDivider,\r\n  FormControl,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  NativeSelect, Dialog,\r\n  Paper as MuiPaper\r\n} from \"@material-ui/core\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {TransactionSnackbar, TransactionSnackbarPropType} from \"../../../components/snackbar/TransactionSnackbar\";\r\nimport {DrivingLog, VehicleData} from \"../../../model/Vehicle\";\r\nimport {VehicleAPI} from \"../../../api/VehicleAPI\";\r\nimport {CellParams, ColDef, DataGrid} from \"@material-ui/data-grid\";\r\nimport {Edit2, Trash2} from \"react-feather\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentPageState} from \"../../../redux/reducers/pageStore\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchWidth: {\r\n    width: \"200px\"\r\n  }\r\n}));\r\n\r\ntype DrivingLogModal = {\r\n  title: string,\r\n  vehicleData: VehicleData,\r\n  onClose: () => void\r\n  open: boolean\r\n};\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nexport function DrivingLogModal(props: DrivingLogModal) {\r\n  //snackbar\r\n  const [snackbarState, setSnackbarState] = useState<TransactionSnackbarPropType>({\r\n    open: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n    duration: 3000\r\n  });\r\n\r\n  const [errorSnackbarState, setErrorSnackbarState] = useState<TransactionSnackbarPropType>({\r\n    open: false,\r\n    message: \"\",\r\n    type: \"error\",\r\n    duration: null\r\n  });\r\n\r\n  const snackBarClose = useCallback(() => {\r\n    setSnackbarState({...snackbarState, open: false})\r\n  }, [snackbarState])\r\n\r\n  const errorSnackBarClose = useCallback(() => {\r\n    setErrorSnackbarState({...errorSnackbarState, open: false})\r\n  }, [errorSnackbarState])\r\n\r\n  const {register, reset, watch, errors, setValue, setError, clearError, handleSubmit} = useForm();\r\n  const onSubmit = handleSubmit(({OpName, OpType, OpTypeName, fCode, tCode}) => {\r\n    confirm();\r\n  });\r\n\r\n  const {GetVehiclesDriveLog} = VehicleAPI();\r\n  const [driveLogList, setDriveLogList] = useState([]);\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(props.open){\r\n      search();\r\n    }\r\n\r\n  }, [props.open]);\r\n\r\n  // 데이터변환\r\n  function convertForDataGridList(targetList: DrivingLog[]) {\r\n    let dataGridList: any = new Array();\r\n\r\n    targetList.forEach((item, idx) => {\r\n      let index = idx;\r\n      let vehicleId = item.vehicleId;\r\n      let startDateTime = item.startDateTime;\r\n      let arriveDateTime = item.arriveDateTime;\r\n      let drivingOdometer = item.arriveOdometer - item.startOdometer;\r\n\r\n      let dataGridObject = {\r\n        'id': (index + 1),\r\n        'vehicleId': vehicleId,\r\n        'startDateTime': startDateTime,\r\n        'arriveDateTime': arriveDateTime,\r\n        'drivingOdometer': drivingOdometer\r\n      }\r\n\r\n      dataGridList.push(dataGridObject);\r\n    })\r\n\r\n    return dataGridList;\r\n  }\r\n\r\n  const confirm = () => {\r\n    /*CreateOperationList(operationPost)\r\n        .then(res => {\r\n          setSnackbarState({\r\n            ...snackbarState,\r\n            open: true,\r\n            message: \"등록되었습니다.\",\r\n          });\r\n\r\n          close();\r\n        })\r\n        .catch(err => {\r\n          setErrorSnackbarState({\r\n            ...errorSnackbarState,\r\n            open: true,\r\n            message: `작업중 에러가 발생하였습니다. ${err}`,\r\n          })\r\n        });*/\r\n  }\r\n\r\n  const close = () => {\r\n    if (props.onClose)\r\n      props.onClose();\r\n  }\r\n\r\n  const search = () => {\r\n    dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n    GetVehiclesDriveLog(props.vehicleData).then(res => {\r\n      console.log(res);\r\n      let data = (res.data != '') ? res.data : [];\r\n      setDriveLogList(convertForDataGridList(data));\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n    }).finally(() => {\r\n      dispatcher(setCurrentPageState({isLoading: false}));\r\n    });\r\n  }\r\n\r\n  /**------------------------------------------\r\n   *  Data grid column 선언\r\n   *-------------------------------------------*/\r\n  const columns: ColDef[] = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"No\",\r\n      width: 100,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n      sortable: false,\r\n\r\n    },\r\n    {\r\n      field: \"vehicleId\",\r\n      headerName: \"운행 번호\",\r\n      width: 200,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"startDateTime\",\r\n      headerName: \"운행 시작시간\",\r\n      width: 150,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"arriveDateTime\",\r\n      headerName: \"운행 도착시간\",\r\n      width: 250,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"drivingOdometer\",\r\n      headerName: \"운행 거리\",\r\n      width: 250,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"modifyAction\",\r\n      headerName: \"수정\",\r\n      width: 100,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n      sortable: false,\r\n      renderCell: (params: CellParams) => {\r\n        /*let opCode: string = String(params.getValue(\"opCode\"));\r\n        let opType: string = String(params.getValue(\"opType\"));\r\n        let opName: string = String(params.getValue(\"opName\"));\r\n\r\n        const paramObject = new OperationGroup();\r\n        paramObject.opCode = opCode;\r\n        paramObject.opType = opType;\r\n        paramObject.opName = opName;*/\r\n\r\n        return (\r\n            <Grid container justify=\"center\">\r\n              <a ><Edit2 style={{cursor: 'pointer'}}/></a>\r\n            </Grid>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"deleteAction\",\r\n      headerName: \"삭제\",\r\n      width: 100,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n      sortable: false,\r\n      renderCell: (params: CellParams) => {\r\n\r\n\r\n        return (\r\n            <Grid container justify=\"center\">\r\n              <a><Trash2 style={{cursor: 'pointer'}}/></a>\r\n            </Grid>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TransactionSnackbar\r\n        {...snackbarState}\r\n        handleClose={snackBarClose}\r\n      />\r\n\r\n      <Dialog open={props.open}\r\n              maxWidth=\"md\"\r\n              fullWidth\r\n              style={{ zIndex: 0 }}>\r\n        <TransactionSnackbar\r\n          {...errorSnackbarState}\r\n          handleClose={errorSnackBarClose}\r\n        />\r\n\r\n        <form onSubmit={onSubmit}>\r\n          <DialogTitle>\r\n            <Typography gutterBottom>{props.title}</Typography>\r\n          </DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Paper>\r\n              <div style={{height: 400, width: '100%' }}>\r\n                <DataGrid\r\n                    showToolbar\r\n                    columns={columns}\r\n                    rows={driveLogList}\r\n                />\r\n              </div>\r\n            </Paper>\r\n\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={search} color=\"primary\">조회</Button>\r\n            <Button onClick={close} color=\"primary\">취소</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\components\\snackbar\\TransactionSnackbar.tsx",["323","324"],"import React, {useState, useEffect} from 'react';\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport { Alert as MuiAlert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\n/** prop type **/\r\nexport type TransactionSnackbarPropType = {\r\n  open: boolean\r\n  type: \"error\" | \"info\" | \"success\"\r\n  message: string\r\n  duration?: number | null\r\n  handleClose?: () => void\r\n};\r\n\r\nexport function TransactionSnackbar(props: TransactionSnackbarPropType) {\r\n  const [state, setState] = useState<TransactionSnackbarPropType>({\r\n    ...props\r\n  });\r\n\r\n  const {open, type, message, duration, handleClose} = state;\r\n\r\n  useEffect(() => {\r\n    setState({...state, ...props})\r\n  }, [props])\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={duration}\r\n      onClose={handleClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <Alert\r\n        onClose={handleClose}\r\n        variant=\"filled\"\r\n        severity={type}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\DrivingLogInsertModal.tsx",["325","326","327","328","329","330","331","332","333","334","335"],"import React, {ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n    Button as MuiButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Divider as MuiDivider,\r\n    Paper as MuiPaper,\r\n    TextField,\r\n    Grid,\r\n    Typography,\r\n    NativeSelect, Dialog\r\n} from \"@material-ui/core\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {TransactionSnackbar, TransactionSnackbarPropType} from \"../../../components/snackbar/TransactionSnackbar\";\r\nimport {DrivingLog, VehicleData} from \"../../../model/Vehicle\";\r\nimport {VehicleAPI} from \"../../../api/VehicleAPI\";\r\nimport {setCurrentPageState} from \"../../../redux/reducers/pageStore\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchWidth: {\r\n        width: \"200px\"\r\n    }\r\n}));\r\n\r\ntype DrivingLogInsertModal = {\r\n    title: string,\r\n    vehicleData: VehicleData,\r\n    onSubmit: () => void\r\n    onClose: () => void\r\n    open: boolean\r\n};\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nexport function DrivingLogInsertModal(props: DrivingLogInsertModal) {\r\n    //snackbar\r\n    const [snackbarState, setSnackbarState] = useState<TransactionSnackbarPropType>({\r\n        open: false,\r\n        message: \"\",\r\n        type: \"success\",\r\n        duration: 3000\r\n    });\r\n\r\n    const [errorSnackbarState, setErrorSnackbarState] = useState<TransactionSnackbarPropType>({\r\n        open: false,\r\n        message: \"\",\r\n        type: \"error\",\r\n        duration: null\r\n    });\r\n\r\n    const snackBarClose = useCallback(() => {\r\n        setSnackbarState({...snackbarState, open: false})\r\n    }, [snackbarState])\r\n\r\n    const errorSnackBarClose = useCallback(() => {\r\n        setErrorSnackbarState({...errorSnackbarState, open: false})\r\n    }, [errorSnackbarState])\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n\r\n    const {register, reset, watch, errors, setValue, setError, clearError, handleSubmit} = useForm();\r\n    const onSubmit = handleSubmit(({startDateTime, arriveDateTime, startOdometer, arriveOdometer}) => {\r\n        let params: DrivingLog = new DrivingLog();\r\n        params.vehicleId = props.vehicleData.id;\r\n        params.startDateTime = startDateTime;\r\n        params.arriveDateTime = arriveDateTime;\r\n        params.startOdometer = props.vehicleData.odometer;\r\n        params.arriveOdometer = props.vehicleData.odometer + parseInt(arriveOdometer);\r\n\r\n        dispatcher(setCurrentPageState({isLoading: true}));\r\n\r\n        confirm(params);\r\n        close();\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const {PostDrivingLogInsert} = VehicleAPI();\r\n\r\n    const confirm = (drivingLogPost: DrivingLog) => {\r\n        PostDrivingLogInsert(drivingLogPost)\r\n            .then(res => {\r\n                if (props.onSubmit)\r\n                    props.onSubmit();\r\n\r\n                setSnackbarState({\r\n                    ...snackbarState,\r\n                    open: true,\r\n                    message: \"등록되었습니다.\",\r\n                });\r\n            })\r\n            .catch(err => {\r\n                setErrorSnackbarState({\r\n                    ...errorSnackbarState,\r\n                    open: true,\r\n                    message: `작업중 에러가 발생하였습니다. ${err}`,\r\n                })\r\n            }).finally(() => {\r\n            dispatcher(setCurrentPageState({isLoading: false}));\r\n\r\n        });\r\n    }\r\n\r\n    const close = () => {\r\n        if (props.onClose)\r\n            props.onClose();\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <TransactionSnackbar\r\n                {...snackbarState}\r\n                handleClose={snackBarClose}\r\n            />\r\n\r\n            <Dialog open={props.open}>\r\n                <TransactionSnackbar\r\n                    {...errorSnackbarState}\r\n                    handleClose={errorSnackBarClose}\r\n                />\r\n\r\n                <form onSubmit={onSubmit}>\r\n                    <DialogTitle>\r\n                        <Typography gutterBottom>{props.title}</Typography>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid container item xs={12} spacing={1} justify=\"flex-start\">\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>운행 시작 시간</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"startDateTime\"\r\n                                    name=\"startDateTime\"\r\n                                    label=\"Next appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={new Date().toISOString().substring(0, 16)}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>운행 종료 시간</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"arriveDateTime\"\r\n                                    name=\"arriveDateTime\"\r\n                                    label=\"Next appointment\"\r\n                                    type=\"datetime-local\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={new Date().toISOString().substring(0, 16)}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>운행 시작 거리</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"startOdometer\"\r\n                                    name=\"startOdometer\"\r\n                                    variant=\"outlined\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    defaultValue={props.vehicleData.odometer}\r\n                                    size=\"small\"\r\n                                    className={classes.searchWidth}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4} sm={4}>\r\n                                <label>운행 종료 거리</label>\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={8}>\r\n                                <TextField\r\n                                    id=\"arriveOdometer\"\r\n                                    name=\"arriveOdometer\"\r\n                                    variant=\"outlined\"\r\n                                    inputRef={register}\r\n                                    required={true}\r\n                                    size=\"small\"\r\n                                    className={classes.searchWidth}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"primary\">등록</Button>\r\n                        <Button onClick={close} color=\"primary\">취소</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\model\\Vehicle.tsx",["336"],"import React from 'react';\r\n\r\n\r\nexport class VehicleData {\r\n    public id:number;\r\n    public imageUrl:string|null;\r\n    public managerId:number|null;\r\n    public model:string|null;\r\n    public modelYear:string|null;\r\n    public name:string;\r\n    public odometer:number;\r\n    public reservationAutoAccept:boolean;\r\n    public vehicleNumber:string;\r\n    public createAt:string;\r\n    public updateAt:string;\r\n\r\n    constructor(id: number=0,\r\n                imageUrl: string=\"\",\r\n                managerId: number|null= null,\r\n                model: string=\"\",\r\n                modelYear: string=\"\",\r\n                name: string=\"\",\r\n                odometer: number=0,\r\n                reservationAutoAccept: boolean=false,\r\n                vehicleNumber: string=\"\",\r\n                createAt: string=\"\",\r\n                updateAt: string=\"\") {\r\n        this.id = id;\r\n        this.imageUrl = imageUrl;\r\n        this.managerId = managerId;\r\n        this.model = model;\r\n        this.modelYear = modelYear;\r\n        this.name = name;\r\n        this.odometer = odometer;\r\n        this.reservationAutoAccept = reservationAutoAccept;\r\n        this.vehicleNumber = vehicleNumber;\r\n        this.createAt = createAt;\r\n        this.updateAt = updateAt;\r\n    }\r\n}\r\n\r\nexport type Manager = {\r\n    email:String,\r\n    id:number,\r\n    imageUrl:String,\r\n    username:String\r\n}\r\n\r\n\r\nexport class DrivingLog {\r\n\r\n    public id: number;\r\n    public vehicleId: number;\r\n    public driverId: number;\r\n    public startDateTime: string;\r\n    public arriveDateTime: string;\r\n    public startOdometer: number;\r\n    public arriveOdometer: number;\r\n    public createAt:string;\r\n    public updateAt:string;\r\n\r\n    constructor(id: number=0,\r\n                vehicleId: number=0,\r\n                driverId: number=0,\r\n                startDateTime: string=\"\",\r\n                arriveDateTime: string=\"\",\r\n                startOdometer: number=0,\r\n                arriveOdometer: number=0,\r\n                createAt: string=\"\",\r\n                updateAt: string=\"\") {\r\n        this.id = id;\r\n        this.vehicleId = vehicleId;\r\n        this.driverId = driverId;\r\n        this.startDateTime = startDateTime;\r\n        this.arriveDateTime = arriveDateTime;\r\n        this.startOdometer = startOdometer;\r\n        this.arriveOdometer = arriveOdometer;\r\n        this.createAt = createAt;\r\n        this.updateAt = updateAt;\r\n    }\r\n}","C:\\Users\\정진구\\IdeaProjects\\aCarLog\\src\\pages\\vehicle\\modal\\VehicleManagerModal.tsx",["337","338","339","340","341","342","343","344","345","346","347","348"],"import React, {ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n    Button as MuiButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Paper as MuiPaper,\r\n    Dialog,\r\n    Avatar as MuiAvatar,\r\n    Box,\r\n    Breadcrumbs as MuiBreadcrumbs,\r\n    Card as MuiCard,\r\n    CardContent,\r\n    Chip as MuiChip,\r\n    Divider as MuiDivider,\r\n    Grid as MuiGrid,\r\n    LinearProgress as MuiLinearProgress,\r\n    Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport {spacing, SpacingProps} from \"@material-ui/system\";\r\nimport {DrivingLog, VehicleData} from \"../../../model/Vehicle\";\r\nimport {AuthAPI} from \"../../../api/AuthAPI\";\r\nimport {UserData} from \"../../../model/User\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\ninterface TypographyPropsType extends SpacingProps {\r\n    component?: string;\r\n}\r\nconst Typography = styled(MuiTypography)<TypographyPropsType>(spacing);\r\n\r\nconst Centered = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Avatar = styled(MuiAvatar)`\r\n  display: inline-block;\r\n  height: 128px;\r\n  width: 128px;\r\n`;\r\n\r\n\r\ntype VehicleManagerModal = {\r\n    title: string,\r\n    vehicleData: VehicleData,\r\n    onClose: () => void\r\n    open: boolean\r\n};\r\n\r\n\r\nexport function VehicleManagerModal(props: VehicleManagerModal) {\r\n    const [managerData, setManagerData] = useState<UserData>();\r\n    const {GetSelectUserData} = AuthAPI();\r\n\r\n    useEffect(() => {\r\n        if(props.vehicleData.managerId != null){\r\n            GetSelectUserData(props.vehicleData.managerId).then(res => {\r\n                setManagerData(res.data as UserData);\r\n                console.log(res);\r\n            }).catch(err => {\r\n                console.log(err.message);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n\r\n    const close = () => {\r\n        if (props.onClose)\r\n            props.onClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={props.open}>\r\n                <DialogTitle>\r\n                    <Typography gutterBottom>{props.title}</Typography>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n\r\n                    <Card mb={6}>\r\n                        <CardContent>\r\n                            <Spacer mb={4} />\r\n\r\n                            <Centered>\r\n                                <Avatar alt=\"Lucy Lavender\" src=\"/noProfileImg.JPG\" />\r\n                                {managerData != undefined ?\r\n                                    (<Typography variant=\"body2\" gutterBottom>\r\n                                        <Box fontWeight=\"fontWeightMedium\">{managerData.username}</Box>\r\n                                        <Box fontWeight=\"fontWeightRegular\">{managerData.email}</Box>\r\n                                    </Typography>)\r\n                                :(<Typography variant=\"body2\" gutterBottom>\r\n                                        <Box fontWeight=\"fontWeightMedium\">담당자 없음</Box>\r\n                                    </Typography>)}\r\n\r\n                            </Centered>\r\n                        </CardContent>\r\n                    </Card>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={close} color=\"primary\">확인</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}",{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":32,"column":8,"nodeType":"355","endLine":32,"endColumn":10,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":11,"column":9,"nodeType":"359","messageId":"360","endLine":11,"endColumn":23},{"ruleId":"361","severity":1,"message":"362","line":11,"column":31,"nodeType":"363","messageId":"364","endLine":11,"endColumn":33},{"ruleId":"357","severity":1,"message":"365","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"365","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"349","replacedBy":"366"},{"ruleId":"351","replacedBy":"367"},{"ruleId":"357","severity":1,"message":"358","line":1,"column":9,"nodeType":"359","messageId":"360","endLine":1,"endColumn":23},{"ruleId":"357","severity":1,"message":"368","line":3,"column":5,"nodeType":"359","messageId":"360","endLine":3,"endColumn":16},{"ruleId":"357","severity":1,"message":"369","line":4,"column":5,"nodeType":"359","messageId":"360","endLine":4,"endColumn":12},{"ruleId":"357","severity":1,"message":"370","line":5,"column":5,"nodeType":"359","messageId":"360","endLine":5,"endColumn":17},{"ruleId":"357","severity":1,"message":"371","line":6,"column":5,"nodeType":"359","messageId":"360","endLine":6,"endColumn":13},{"ruleId":"357","severity":1,"message":"372","line":8,"column":5,"nodeType":"359","messageId":"360","endLine":8,"endColumn":10},{"ruleId":"357","severity":1,"message":"373","line":8,"column":12,"nodeType":"359","messageId":"360","endLine":8,"endColumn":21},{"ruleId":"357","severity":1,"message":"374","line":8,"column":23,"nodeType":"359","messageId":"360","endLine":8,"endColumn":31},{"ruleId":"357","severity":1,"message":"375","line":8,"column":33,"nodeType":"359","messageId":"360","endLine":8,"endColumn":37},{"ruleId":"357","severity":1,"message":"376","line":8,"column":39,"nodeType":"359","messageId":"360","endLine":8,"endColumn":45},{"ruleId":"357","severity":1,"message":"377","line":8,"column":47,"nodeType":"359","messageId":"360","endLine":8,"endColumn":51},{"ruleId":"357","severity":1,"message":"378","line":8,"column":53,"nodeType":"359","messageId":"360","endLine":8,"endColumn":63},{"ruleId":"357","severity":1,"message":"379","line":8,"column":65,"nodeType":"359","messageId":"360","endLine":8,"endColumn":79},{"ruleId":"357","severity":1,"message":"380","line":7,"column":8,"nodeType":"359","messageId":"360","endLine":7,"endColumn":14},{"ruleId":"357","severity":1,"message":"381","line":8,"column":8,"nodeType":"359","messageId":"360","endLine":8,"endColumn":16},{"ruleId":"357","severity":1,"message":"382","line":2,"column":23,"nodeType":"359","messageId":"360","endLine":2,"endColumn":29},{"ruleId":"357","severity":1,"message":"383","line":2,"column":31,"nodeType":"359","messageId":"360","endLine":2,"endColumn":34},{"ruleId":"357","severity":1,"message":"384","line":5,"column":7,"nodeType":"359","messageId":"360","endLine":5,"endColumn":19},{"ruleId":"357","severity":1,"message":"385","line":5,"column":22,"nodeType":"359","messageId":"360","endLine":5,"endColumn":33},{"ruleId":"357","severity":1,"message":"386","line":6,"column":9,"nodeType":"359","messageId":"360","endLine":6,"endColumn":21},{"ruleId":"357","severity":1,"message":"387","line":7,"column":9,"nodeType":"359","messageId":"360","endLine":7,"endColumn":17},{"ruleId":"357","severity":1,"message":"388","line":8,"column":9,"nodeType":"359","messageId":"360","endLine":8,"endColumn":15},{"ruleId":"357","severity":1,"message":"389","line":9,"column":29,"nodeType":"359","messageId":"360","endLine":9,"endColumn":37},{"ruleId":"357","severity":1,"message":"375","line":10,"column":9,"nodeType":"359","messageId":"360","endLine":10,"endColumn":13},{"ruleId":"357","severity":1,"message":"390","line":10,"column":15,"nodeType":"359","messageId":"360","endLine":10,"endColumn":20},{"ruleId":"357","severity":1,"message":"391","line":11,"column":9,"nodeType":"359","messageId":"360","endLine":11,"endColumn":15},{"ruleId":"357","severity":1,"message":"392","line":11,"column":17,"nodeType":"359","messageId":"360","endLine":11,"endColumn":25},{"ruleId":"357","severity":1,"message":"393","line":12,"column":9,"nodeType":"359","messageId":"360","endLine":12,"endColumn":17},{"ruleId":"357","severity":1,"message":"394","line":13,"column":9,"nodeType":"359","messageId":"360","endLine":13,"endColumn":27},{"ruleId":"357","severity":1,"message":"395","line":23,"column":12,"nodeType":"359","messageId":"360","endLine":23,"endColumn":24},{"ruleId":"357","severity":1,"message":"396","line":4,"column":20,"nodeType":"359","messageId":"360","endLine":4,"endColumn":30},{"ruleId":"357","severity":1,"message":"397","line":32,"column":7,"nodeType":"359","messageId":"360","endLine":32,"endColumn":13},{"ruleId":"357","severity":1,"message":"398","line":48,"column":7,"nodeType":"359","messageId":"360","endLine":48,"endColumn":24},{"ruleId":"357","severity":1,"message":"399","line":63,"column":7,"nodeType":"359","messageId":"360","endLine":63,"endColumn":12},{"ruleId":"357","severity":1,"message":"400","line":13,"column":3,"nodeType":"359","messageId":"360","endLine":13,"endColumn":8},{"ruleId":"357","severity":1,"message":"375","line":16,"column":3,"nodeType":"359","messageId":"360","endLine":16,"endColumn":7},{"ruleId":"357","severity":1,"message":"401","line":17,"column":3,"nodeType":"359","messageId":"360","endLine":17,"endColumn":9},{"ruleId":"357","severity":1,"message":"402","line":31,"column":8,"nodeType":"359","messageId":"360","endLine":31,"endColumn":13},{"ruleId":"357","severity":1,"message":"386","line":32,"column":9,"nodeType":"359","messageId":"360","endLine":32,"endColumn":21},{"ruleId":"357","severity":1,"message":"385","line":33,"column":9,"nodeType":"359","messageId":"360","endLine":33,"endColumn":20},{"ruleId":"357","severity":1,"message":"403","line":93,"column":7,"nodeType":"359","messageId":"360","endLine":93,"endColumn":16},{"ruleId":"357","severity":1,"message":"393","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":24},{"ruleId":"357","severity":1,"message":"404","line":3,"column":8,"nodeType":"359","messageId":"360","endLine":3,"endColumn":16},{"ruleId":"357","severity":1,"message":"405","line":12,"column":9,"nodeType":"359","messageId":"360","endLine":12,"endColumn":19},{"ruleId":"357","severity":1,"message":"406","line":15,"column":9,"nodeType":"359","messageId":"360","endLine":15,"endColumn":19},{"ruleId":"357","severity":1,"message":"407","line":23,"column":7,"nodeType":"359","messageId":"360","endLine":23,"endColumn":13},{"ruleId":"353","severity":1,"message":"408","line":45,"column":8,"nodeType":"355","endLine":45,"endColumn":10,"suggestions":"409"},{"ruleId":"410","severity":1,"message":"411","line":123,"column":25,"nodeType":"412","endLine":123,"endColumn":29},{"ruleId":"410","severity":1,"message":"411","line":140,"column":25,"nodeType":"412","endLine":140,"endColumn":28},{"ruleId":"357","severity":1,"message":"413","line":1,"column":9,"nodeType":"359","messageId":"360","endLine":1,"endColumn":16},{"ruleId":"357","severity":1,"message":"414","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":17},{"ruleId":"357","severity":1,"message":"415","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":16},{"ruleId":"357","severity":1,"message":"375","line":13,"column":5,"nodeType":"359","messageId":"360","endLine":13,"endColumn":9},{"ruleId":"357","severity":1,"message":"416","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":14,"endColumn":9},{"ruleId":"357","severity":1,"message":"417","line":31,"column":7,"nodeType":"359","messageId":"360","endLine":31,"endColumn":14},{"ruleId":"357","severity":1,"message":"418","line":33,"column":7,"nodeType":"359","messageId":"360","endLine":33,"endColumn":18},{"ruleId":"357","severity":1,"message":"419","line":52,"column":12,"nodeType":"359","messageId":"360","endLine":52,"endColumn":20},{"ruleId":"361","severity":1,"message":"420","line":57,"column":25,"nodeType":"363","messageId":"364","endLine":57,"endColumn":27},{"ruleId":"353","severity":1,"message":"421","line":60,"column":7,"nodeType":"355","endLine":60,"endColumn":9,"suggestions":"422"},{"ruleId":"357","severity":1,"message":"423","line":4,"column":15,"nodeType":"359","messageId":"360","endLine":4,"endColumn":25},{"ruleId":"357","severity":1,"message":"424","line":2,"column":9,"nodeType":"359","messageId":"360","endLine":2,"endColumn":27},{"ruleId":"357","severity":1,"message":"425","line":5,"column":9,"nodeType":"359","messageId":"360","endLine":5,"endColumn":20},{"ruleId":"357","severity":1,"message":"426","line":10,"column":11,"nodeType":"359","messageId":"360","endLine":10,"endColumn":19},{"ruleId":"357","severity":1,"message":"365","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"358","line":1,"column":9,"nodeType":"359","messageId":"360","endLine":1,"endColumn":23},{"ruleId":"357","severity":1,"message":"375","line":4,"column":3,"nodeType":"359","messageId":"360","endLine":4,"endColumn":7},{"ruleId":"357","severity":1,"message":"416","line":5,"column":3,"nodeType":"359","messageId":"360","endLine":5,"endColumn":7},{"ruleId":"357","severity":1,"message":"427","line":6,"column":18,"nodeType":"359","messageId":"360","endLine":6,"endColumn":32},{"ruleId":"357","severity":1,"message":"428","line":8,"column":23,"nodeType":"359","messageId":"360","endLine":8,"endColumn":42},{"ruleId":"357","severity":1,"message":"429","line":9,"column":14,"nodeType":"359","messageId":"360","endLine":9,"endColumn":24},{"ruleId":"357","severity":1,"message":"430","line":13,"column":3,"nodeType":"359","messageId":"360","endLine":13,"endColumn":12},{"ruleId":"357","severity":1,"message":"431","line":2,"column":9,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"357","severity":1,"message":"393","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":35},{"ruleId":"353","severity":1,"message":"408","line":44,"column":8,"nodeType":"355","endLine":44,"endColumn":10,"suggestions":"432"},{"ruleId":"357","severity":1,"message":"413","line":1,"column":9,"nodeType":"359","messageId":"360","endLine":1,"endColumn":16},{"ruleId":"357","severity":1,"message":"414","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":17},{"ruleId":"357","severity":1,"message":"415","line":7,"column":10,"nodeType":"359","messageId":"360","endLine":7,"endColumn":16},{"ruleId":"357","severity":1,"message":"416","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":14,"endColumn":9},{"ruleId":"357","severity":1,"message":"417","line":34,"column":7,"nodeType":"359","messageId":"360","endLine":34,"endColumn":14},{"ruleId":"357","severity":1,"message":"418","line":36,"column":7,"nodeType":"359","messageId":"360","endLine":36,"endColumn":18},{"ruleId":"353","severity":1,"message":"433","line":64,"column":7,"nodeType":"355","endLine":64,"endColumn":9,"suggestions":"434"},{"ruleId":"357","severity":1,"message":"435","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"429","line":7,"column":14,"nodeType":"359","messageId":"360","endLine":7,"endColumn":24},{"ruleId":"357","severity":1,"message":"436","line":8,"column":3,"nodeType":"359","messageId":"360","endLine":8,"endColumn":14},{"ruleId":"357","severity":1,"message":"437","line":9,"column":3,"nodeType":"359","messageId":"360","endLine":9,"endColumn":12},{"ruleId":"357","severity":1,"message":"438","line":12,"column":3,"nodeType":"359","messageId":"360","endLine":12,"endColumn":15},{"ruleId":"357","severity":1,"message":"439","line":29,"column":7,"nodeType":"359","messageId":"360","endLine":29,"endColumn":16},{"ruleId":"440","severity":1,"message":"441","line":45,"column":17,"nodeType":"359","messageId":"442","endLine":45,"endColumn":32},{"ruleId":"357","severity":1,"message":"443","line":69,"column":10,"nodeType":"359","messageId":"360","endLine":69,"endColumn":18},{"ruleId":"357","severity":1,"message":"444","line":69,"column":20,"nodeType":"359","messageId":"360","endLine":69,"endColumn":25},{"ruleId":"357","severity":1,"message":"445","line":69,"column":27,"nodeType":"359","messageId":"360","endLine":69,"endColumn":32},{"ruleId":"357","severity":1,"message":"446","line":69,"column":34,"nodeType":"359","messageId":"360","endLine":69,"endColumn":40},{"ruleId":"357","severity":1,"message":"447","line":69,"column":42,"nodeType":"359","messageId":"360","endLine":69,"endColumn":50},{"ruleId":"357","severity":1,"message":"448","line":69,"column":52,"nodeType":"359","messageId":"360","endLine":69,"endColumn":60},{"ruleId":"357","severity":1,"message":"449","line":69,"column":62,"nodeType":"359","messageId":"360","endLine":69,"endColumn":72},{"ruleId":"353","severity":1,"message":"450","line":84,"column":6,"nodeType":"355","endLine":84,"endColumn":18,"suggestions":"451"},{"ruleId":"452","severity":1,"message":"453","line":88,"column":29,"nodeType":"454","messageId":"455","endLine":88,"endColumn":40,"fix":"456"},{"ruleId":"361","severity":1,"message":"420","line":141,"column":28,"nodeType":"363","messageId":"364","endLine":141,"endColumn":30},{"ruleId":"410","severity":1,"message":"411","line":211,"column":15,"nodeType":"412","endLine":211,"endColumn":19},{"ruleId":"410","severity":1,"message":"411","line":228,"column":15,"nodeType":"412","endLine":228,"endColumn":18},{"ruleId":"357","severity":1,"message":"457","line":7,"column":29,"nodeType":"359","messageId":"360","endLine":7,"endColumn":39},{"ruleId":"353","severity":1,"message":"458","line":29,"column":6,"nodeType":"355","endLine":29,"endColumn":13,"suggestions":"459"},{"ruleId":"357","severity":1,"message":"435","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"429","line":7,"column":16,"nodeType":"359","messageId":"360","endLine":7,"endColumn":26},{"ruleId":"357","severity":1,"message":"438","line":12,"column":5,"nodeType":"359","messageId":"360","endLine":12,"endColumn":17},{"ruleId":"357","severity":1,"message":"460","line":40,"column":7,"nodeType":"359","messageId":"360","endLine":40,"endColumn":12},{"ruleId":"440","severity":1,"message":"461","line":42,"column":17,"nodeType":"359","messageId":"442","endLine":42,"endColumn":38},{"ruleId":"357","severity":1,"message":"444","line":69,"column":22,"nodeType":"359","messageId":"360","endLine":69,"endColumn":27},{"ruleId":"357","severity":1,"message":"445","line":69,"column":29,"nodeType":"359","messageId":"360","endLine":69,"endColumn":34},{"ruleId":"357","severity":1,"message":"446","line":69,"column":36,"nodeType":"359","messageId":"360","endLine":69,"endColumn":42},{"ruleId":"357","severity":1,"message":"447","line":69,"column":44,"nodeType":"359","messageId":"360","endLine":69,"endColumn":52},{"ruleId":"357","severity":1,"message":"448","line":69,"column":54,"nodeType":"359","messageId":"360","endLine":69,"endColumn":62},{"ruleId":"357","severity":1,"message":"449","line":69,"column":64,"nodeType":"359","messageId":"360","endLine":69,"endColumn":74},{"ruleId":"357","severity":1,"message":"365","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"435","line":1,"column":16,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"462","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":38},{"ruleId":"357","severity":1,"message":"463","line":7,"column":14,"nodeType":"359","messageId":"360","endLine":7,"endColumn":22},{"ruleId":"357","severity":1,"message":"427","line":11,"column":20,"nodeType":"359","messageId":"360","endLine":11,"endColumn":34},{"ruleId":"357","severity":1,"message":"464","line":14,"column":13,"nodeType":"359","messageId":"360","endLine":14,"endColumn":20},{"ruleId":"357","severity":1,"message":"429","line":15,"column":16,"nodeType":"359","messageId":"360","endLine":15,"endColumn":26},{"ruleId":"357","severity":1,"message":"465","line":16,"column":13,"nodeType":"359","messageId":"360","endLine":16,"endColumn":20},{"ruleId":"357","severity":1,"message":"466","line":17,"column":23,"nodeType":"359","messageId":"360","endLine":17,"endColumn":40},{"ruleId":"357","severity":1,"message":"406","line":23,"column":9,"nodeType":"359","messageId":"360","endLine":23,"endColumn":19},{"ruleId":"440","severity":1,"message":"467","line":58,"column":17,"nodeType":"359","messageId":"442","endLine":58,"endColumn":36},{"ruleId":"353","severity":1,"message":"468","line":71,"column":8,"nodeType":"355","endLine":71,"endColumn":10,"suggestions":"469"},{"ruleId":"361","severity":1,"message":"420","line":94,"column":46,"nodeType":"363","messageId":"364","endLine":94,"endColumn":48},"no-native-reassign",["470"],"no-negated-in-lhs",["471"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingTheme'. Either include it or remove the dependency array.","ArrayExpression",["472"],"@typescript-eslint/no-unused-vars","'RouteChildType' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.",["470"],["471"],"'Codesandbox' is defined but never used.","'Monitor' is defined but never used.","'ShoppingCart' is defined but never used.","'PieChart' is defined but never used.","'Users' is defined but never used.","'IconProps' is defined but never used.","'Calendar' is defined but never used.","'Grid' is defined but never used.","'Shield' is defined but never used.","'Play' is defined but never used.","'Smartphone' is defined but never used.","'GitPullRequest' is defined but never used.","'Footer' is defined but never used.","'Settings' is defined but never used.","'indigo' is defined but never used.","'red' is defined but never used.","'defaultColor' is assigned a value but never used.","'useSelector' is defined but never used.","'AppStateType' is defined but never used.","'setTheme' is defined but never used.","'THEMES' is defined but never used.","'UserAuth' is defined but never used.","'Paper' is defined but never used.","'ColDef' is defined but never used.","'DataGrid' is defined but never used.","'useState' is defined but never used.","'LoadingProgressBar' is defined but never used.","'userObjState' is assigned a value but never used.","'SearchIcon' is defined but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'Input' is assigned a value but never used.","'Badge' is defined but never used.","'Avatar' is defined but never used.","'async' is defined but never used.","'BrandChip' is assigned a value but never used.","'imgCar_1' is defined but never used.","'CustomCard' is defined but never used.","'DrivingLog' is defined but never used.","'Button' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetVehiclesList' and 'dispatcher'. Either include them or remove the dependency array.",["473"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Spinner' is defined but never used.","'NavLink' is defined but never used.","'Helmet' is defined but never used.","'Link' is defined but never used.","'Divider' is assigned a value but never used.","'Breadcrumbs' is assigned a value but never used.","'driveLog' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'props.imgUrl'. Either include it or remove the dependency array. If 'setImgUrl' needs the current value of 'props.imgUrl', you can also switch to useReducer instead of useState and read 'props.imgUrl' in the reducer.",["474"],"'useHistory' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'VehicleData' is defined but never used.","'_dataApi' is assigned a value but never used.","'MuiBreadcrumbs' is defined but never used.","'MuiCircularProgress' is defined but never used.","'MuiDivider' is defined but never used.","'ListProps' is defined but never used.","'AuthData' is defined but never used.",["475"],"React Hook useEffect has a missing dependency: 'props.vehicleData'. Either include it or remove the dependency array. If 'setBindingVehicleData' needs the current value of 'props.vehicleData', you can also switch to useReducer instead of useState and read 'props.vehicleData' in the reducer.",["476"],"'ReactNode' is defined but never used.","'FormControl' is defined but never used.","'TextField' is defined but never used.","'NativeSelect' is defined but never used.","'useStyles' is assigned a value but never used.","@typescript-eslint/no-redeclare","'DrivingLogModal' is already defined.","redeclared","'register' is assigned a value but never used.","'reset' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setError' is assigned a value but never used.","'clearError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["477"],"@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"478","text":"479"},"'AlertTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["480"],"'Paper' is assigned a value but never used.","'DrivingLogInsertModal' is already defined.","'useCallback' is defined but never used.","'MuiPaper' is defined but never used.","'MuiChip' is defined but never used.","'MuiGrid' is defined but never used.","'MuiLinearProgress' is defined but never used.","'VehicleManagerModal' is already defined.","React Hook useEffect has missing dependencies: 'GetSelectUserData' and 'props.vehicleData.managerId'. Either include them or remove the dependency array.",["481"],"no-global-assign","no-unsafe-negation",{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"484","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},[2520,2531],"[]",{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},"Update the dependencies array to be: [settingTheme]",{"range":"497","text":"498"},"Update the dependencies array to be: [GetVehiclesList, dispatcher]",{"range":"499","text":"500"},"Update the dependencies array to be: [props.imgUrl]",{"range":"501","text":"502"},{"range":"503","text":"500"},"Update the dependencies array to be: [props.vehicleData]",{"range":"504","text":"505"},"Update the dependencies array to be: [props.open, search]",{"range":"506","text":"507"},"Update the dependencies array to be: [props, state]",{"range":"508","text":"509"},"Update the dependencies array to be: [GetSelectUserData, props.vehicleData.managerId]",{"range":"510","text":"511"},[1026,1028],"[settingTheme]",[1574,1576],"[GetVehiclesList, dispatcher]",[1499,1501],"[props.imgUrl]",[1290,1292],[1919,1921],"[props.vehicleData]",[2399,2411],"[props.open, search]",[804,811],"[props, state]",[1870,1872],"[GetSelectUserData, props.vehicleData.managerId]"]